



#region Autogenerated by T4 text template

using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using kova.api.Models;
using Microsoft.AspNetCore.Authorization;
using System.Security.Claims;
using Microsoft.EntityFrameworkCore;
using kova.api.Authentication;

namespace kova.api.Controllers 
{
 	[Authorize]
    [Route("api/[controller]")]
	public partial class AreaController : KovaModelControllerBase<TOrganizationArea>
	{
		public AreaController(kovaContext context) : base(context)
		{
            
		}

		// GET api/Area
        [HttpGet]
        public IQueryable<TOrganizationArea> Get()
        {
            return context.TOrganizationArea
                .Where(AccessCriteria);
        }

		
        // GET api/Area/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationArea Get(Guid primKey)
        {
            return context.TOrganizationArea
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class CourseGroupController : KovaModelControllerBase<TOrganizationCourseGroup>
	{
		public CourseGroupController(kovaContext context) : base(context)
		{
            
		}

		// GET api/CourseGroup
        [HttpGet]
        public IQueryable<TOrganizationCourseGroup> Get()
        {
            return context.TOrganizationCourseGroup
                .Where(AccessCriteria);
        }

		
        // GET api/CourseGroup/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationCourseGroup Get(Guid primKey)
        {
            return context.TOrganizationCourseGroup
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class CourseController : KovaModelControllerBase<TOrganizationCourse>
	{
		public CourseController(kovaContext context) : base(context)
		{
            
		}

		// GET api/Course
        [HttpGet]
        public IQueryable<TOrganizationCourse> Get()
        {
            return context.TOrganizationCourse
                .Where(AccessCriteria);
        }

		
        // GET api/Course/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationCourse Get(Guid primKey)
        {
            return context.TOrganizationCourse
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class GroupController : KovaModelControllerBase<TOrganizationGroup>
	{
		public GroupController(kovaContext context) : base(context)
		{
            
		}

		// GET api/Group
        [HttpGet]
        public IQueryable<TOrganizationGroup> Get()
        {
            return context.TOrganizationGroup
                .Where(AccessCriteria);
        }

		
        // GET api/Group/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationGroup Get(Guid primKey)
        {
            return context.TOrganizationGroup
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class TaskLogController : KovaModelControllerBase<TOrganizationTaskLog>
	{
		public TaskLogController(kovaContext context) : base(context)
		{
            
		}

		// GET api/TaskLog
        [HttpGet]
        public IQueryable<TOrganizationTaskLog> Get()
        {
            return context.TOrganizationTaskLog
                .Where(AccessCriteria);
        }

		
        // GET api/TaskLog/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationTaskLog Get(Guid primKey)
        {
            return context.TOrganizationTaskLog
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class ExternalMemberController : KovaModelControllerBase<TOrganizationExternalMember>
	{
		public ExternalMemberController(kovaContext context) : base(context)
		{
            
		}

		// GET api/ExternalMember
        [HttpGet]
        public IQueryable<TOrganizationExternalMember> Get()
        {
            return context.TOrganizationExternalMember
                .Where(AccessCriteria);
        }

		
        // GET api/ExternalMember/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationExternalMember Get(Guid primKey)
        {
            return context.TOrganizationExternalMember
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class CertificationController : KovaModelControllerBase<TOrganizationCertification>
	{
		public CertificationController(kovaContext context) : base(context)
		{
            
		}

		// GET api/Certification
        [HttpGet]
        public IQueryable<TOrganizationCertification> Get()
        {
            return context.TOrganizationCertification
                .Where(AccessCriteria);
        }

		
        // GET api/Certification/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationCertification Get(Guid primKey)
        {
            return context.TOrganizationCertification
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class EventLogController : KovaModelControllerBase<TOrganizationEventLog>
	{
		public EventLogController(kovaContext context) : base(context)
		{
            
		}

		// GET api/EventLog
        [HttpGet]
        public IQueryable<TOrganizationEventLog> Get()
        {
            return context.TOrganizationEventLog
                .Where(AccessCriteria);
        }

		
        // GET api/EventLog/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationEventLog Get(Guid primKey)
        {
            return context.TOrganizationEventLog
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class OrganizationController : KovaModelControllerBase<TOrganizationOrganization>
	{
		public OrganizationController(kovaContext context) : base(context)
		{
            
		}

		// GET api/Organization
        [HttpGet]
        public IQueryable<TOrganizationOrganization> Get()
        {
            return context.TOrganizationOrganization
                .Where(AccessCriteria);
        }

		
        // GET api/Organization/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationOrganization Get(Guid primKey)
        {
            return context.TOrganizationOrganization
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class PositionController : KovaModelControllerBase<TOrganizationPosition>
	{
		public PositionController(kovaContext context) : base(context)
		{
            
		}

		// GET api/Position
        [HttpGet]
        public IQueryable<TOrganizationPosition> Get()
        {
            return context.TOrganizationPosition
                .Where(AccessCriteria);
        }

		
        // GET api/Position/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationPosition Get(Guid primKey)
        {
            return context.TOrganizationPosition
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class EventCrewController : KovaModelControllerBase<TOrganizationEventCrew>
	{
		public EventCrewController(kovaContext context) : base(context)
		{
            
		}

		// GET api/EventCrew
        [HttpGet]
        public IQueryable<TOrganizationEventCrew> Get()
        {
            return context.TOrganizationEventCrew
                .Where(AccessCriteria);
        }

		
        // GET api/EventCrew/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationEventCrew Get(Guid primKey)
        {
            return context.TOrganizationEventCrew
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class EquipmentController : KovaModelControllerBase<TOrganizationEquipment>
	{
		public EquipmentController(kovaContext context) : base(context)
		{
            
		}

		// GET api/Equipment
        [HttpGet]
        public IQueryable<TOrganizationEquipment> Get()
        {
            return context.TOrganizationEquipment
                .Where(AccessCriteria);
        }

		
        // GET api/Equipment/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationEquipment Get(Guid primKey)
        {
            return context.TOrganizationEquipment
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class QualificationCriteriaController : KovaModelControllerBase<TOrganizationQualificationCriteria>
	{
		public QualificationCriteriaController(kovaContext context) : base(context)
		{
            
		}

		// GET api/QualificationCriteria
        [HttpGet]
        public IQueryable<TOrganizationQualificationCriteria> Get()
        {
            return context.TOrganizationQualificationCriteria
                .Where(AccessCriteria);
        }

		
        // GET api/QualificationCriteria/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationQualificationCriteria Get(Guid primKey)
        {
            return context.TOrganizationQualificationCriteria
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class PersonController : KovaModelControllerBase<TOrganizationPerson>
	{
		public PersonController(kovaContext context) : base(context)
		{
            
		}

		// GET api/Person
        [HttpGet]
        public IQueryable<TOrganizationPerson> Get()
        {
            return context.TOrganizationPerson
                .Where(AccessCriteria);
        }

		
        // GET api/Person/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationPerson Get(Guid primKey)
        {
            return context.TOrganizationPerson
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class TrackController : KovaModelControllerBase<TOrganizationTrack>
	{
		public TrackController(kovaContext context) : base(context)
		{
            
		}

		// GET api/Track
        [HttpGet]
        public IQueryable<TOrganizationTrack> Get()
        {
            return context.TOrganizationTrack
                .Where(AccessCriteria);
        }

		
        // GET api/Track/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationTrack Get(Guid primKey)
        {
            return context.TOrganizationTrack
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class MessageGroupController : KovaModelControllerBase<TOrganizationMessageGroup>
	{
		public MessageGroupController(kovaContext context) : base(context)
		{
            
		}

		// GET api/MessageGroup
        [HttpGet]
        public IQueryable<TOrganizationMessageGroup> Get()
        {
            return context.TOrganizationMessageGroup
                .Where(AccessCriteria);
        }

		
        // GET api/MessageGroup/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationMessageGroup Get(Guid primKey)
        {
            return context.TOrganizationMessageGroup
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class EventController : KovaModelControllerBase<TOrganizationEvent>
	{
		public EventController(kovaContext context) : base(context)
		{
            
		}

		// GET api/Event
        [HttpGet]
        public IQueryable<TOrganizationEvent> Get()
        {
            return context.TOrganizationEvent
                .Where(AccessCriteria);
        }

		
        // GET api/Event/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationEvent Get(Guid primKey)
        {
            return context.TOrganizationEvent
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class PersonPositionController : KovaModelControllerBase<TOrganizationPersonPosition>
	{
		public PersonPositionController(kovaContext context) : base(context)
		{
            
		}

		// GET api/PersonPosition
        [HttpGet]
        public IQueryable<TOrganizationPersonPosition> Get()
        {
            return context.TOrganizationPersonPosition
                .Where(AccessCriteria);
        }

		
        // GET api/PersonPosition/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationPersonPosition Get(Guid primKey)
        {
            return context.TOrganizationPersonPosition
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class TrackerController : KovaModelControllerBase<TOrganizationTracker>
	{
		public TrackerController(kovaContext context) : base(context)
		{
            
		}

		// GET api/Tracker
        [HttpGet]
        public IQueryable<TOrganizationTracker> Get()
        {
            return context.TOrganizationTracker
                .Where(AccessCriteria);
        }

		
        // GET api/Tracker/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationTracker Get(Guid primKey)
        {
            return context.TOrganizationTracker
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class MemberGroupController : KovaModelControllerBase<TOrganizationMemberGroup>
	{
		public MemberGroupController(kovaContext context) : base(context)
		{
            
		}

		// GET api/MemberGroup
        [HttpGet]
        public IQueryable<TOrganizationMemberGroup> Get()
        {
            return context.TOrganizationMemberGroup
                .Where(AccessCriteria);
        }

		
        // GET api/MemberGroup/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationMemberGroup Get(Guid primKey)
        {
            return context.TOrganizationMemberGroup
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class MessageLogController : KovaModelControllerBase<TOrganizationMessageLog>
	{
		public MessageLogController(kovaContext context) : base(context)
		{
            
		}

		// GET api/MessageLog
        [HttpGet]
        public IQueryable<TOrganizationMessageLog> Get()
        {
            return context.TOrganizationMessageLog
                .Where(AccessCriteria);
        }

		
        // GET api/MessageLog/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationMessageLog Get(Guid primKey)
        {
            return context.TOrganizationMessageLog
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class EventParticipantController : KovaModelControllerBase<TOrganizationEventParticipant>
	{
		public EventParticipantController(kovaContext context) : base(context)
		{
            
		}

		// GET api/EventParticipant
        [HttpGet]
        public IQueryable<TOrganizationEventParticipant> Get()
        {
            return context.TOrganizationEventParticipant
                .Where(AccessCriteria);
        }

		
        // GET api/EventParticipant/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationEventParticipant Get(Guid primKey)
        {
            return context.TOrganizationEventParticipant
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class EventParticipantRoleController : KovaModelControllerBase<TOrganizationEventParticipantRole>
	{
		public EventParticipantRoleController(kovaContext context) : base(context)
		{
            
		}

		// GET api/EventParticipantRole
        [HttpGet]
        public IQueryable<TOrganizationEventParticipantRole> Get()
        {
            return context.TOrganizationEventParticipantRole
                .Where(AccessCriteria);
        }

		
        // GET api/EventParticipantRole/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationEventParticipantRole Get(Guid primKey)
        {
            return context.TOrganizationEventParticipantRole
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class MapController : KovaModelControllerBase<TOrganizationMap>
	{
		public MapController(kovaContext context) : base(context)
		{
            
		}

		// GET api/Map
        [HttpGet]
        public IQueryable<TOrganizationMap> Get()
        {
            return context.TOrganizationMap
                .Where(AccessCriteria);
        }

		
        // GET api/Map/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationMap Get(Guid primKey)
        {
            return context.TOrganizationMap
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class QualificationCourseController : KovaModelControllerBase<TOrganizationQualificationCourse>
	{
		public QualificationCourseController(kovaContext context) : base(context)
		{
            
		}

		// GET api/QualificationCourse
        [HttpGet]
        public IQueryable<TOrganizationQualificationCourse> Get()
        {
            return context.TOrganizationQualificationCourse
                .Where(AccessCriteria);
        }

		
        // GET api/QualificationCourse/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationQualificationCourse Get(Guid primKey)
        {
            return context.TOrganizationQualificationCourse
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class SmsNotificationReferenceController : KovaModelControllerBase<TOrganizationSmsNotificationReference>
	{
		public SmsNotificationReferenceController(kovaContext context) : base(context)
		{
            
		}

		// GET api/SmsNotificationReference
        [HttpGet]
        public IQueryable<TOrganizationSmsNotificationReference> Get()
        {
            return context.TOrganizationSmsNotificationReference
                .Where(AccessCriteria);
        }

		
        // GET api/SmsNotificationReference/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationSmsNotificationReference Get(Guid primKey)
        {
            return context.TOrganizationSmsNotificationReference
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class MessageGroupMemberController : KovaModelControllerBase<TOrganizationMessageGroupMember>
	{
		public MessageGroupMemberController(kovaContext context) : base(context)
		{
            
		}

		// GET api/MessageGroupMember
        [HttpGet]
        public IQueryable<TOrganizationMessageGroupMember> Get()
        {
            return context.TOrganizationMessageGroupMember
                .Where(AccessCriteria);
        }

		
        // GET api/MessageGroupMember/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationMessageGroupMember Get(Guid primKey)
        {
            return context.TOrganizationMessageGroupMember
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class ComNumberController : KovaModelControllerBase<TOrganizationComNumber>
	{
		public ComNumberController(kovaContext context) : base(context)
		{
            
		}

		// GET api/ComNumber
        [HttpGet]
        public IQueryable<TOrganizationComNumber> Get()
        {
            return context.TOrganizationComNumber
                .Where(AccessCriteria);
        }

		
        // GET api/ComNumber/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationComNumber Get(Guid primKey)
        {
            return context.TOrganizationComNumber
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class PoiController : KovaModelControllerBase<TOrganizationPoi>
	{
		public PoiController(kovaContext context) : base(context)
		{
            
		}

		// GET api/Poi
        [HttpGet]
        public IQueryable<TOrganizationPoi> Get()
        {
            return context.TOrganizationPoi
                .Where(AccessCriteria);
        }

		
        // GET api/Poi/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationPoi Get(Guid primKey)
        {
            return context.TOrganizationPoi
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class GroupMemberController : KovaModelControllerBase<TOrganizationGroupMember>
	{
		public GroupMemberController(kovaContext context) : base(context)
		{
            
		}

		// GET api/GroupMember
        [HttpGet]
        public IQueryable<TOrganizationGroupMember> Get()
        {
            return context.TOrganizationGroupMember
                .Where(AccessCriteria);
        }

		
        // GET api/GroupMember/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationGroupMember Get(Guid primKey)
        {
            return context.TOrganizationGroupMember
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class EventTypeController : KovaModelControllerBase<TOrganizationEventType>
	{
		public EventTypeController(kovaContext context) : base(context)
		{
            
		}

		// GET api/EventType
        [HttpGet]
        public IQueryable<TOrganizationEventType> Get()
        {
            return context.TOrganizationEventType
                .Where(AccessCriteria);
        }

		
        // GET api/EventType/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationEventType Get(Guid primKey)
        {
            return context.TOrganizationEventType
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class PersonEquipmentController : KovaModelControllerBase<TOrganizationPersonEquipment>
	{
		public PersonEquipmentController(kovaContext context) : base(context)
		{
            
		}

		// GET api/PersonEquipment
        [HttpGet]
        public IQueryable<TOrganizationPersonEquipment> Get()
        {
            return context.TOrganizationPersonEquipment
                .Where(AccessCriteria);
        }

		
        // GET api/PersonEquipment/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationPersonEquipment Get(Guid primKey)
        {
            return context.TOrganizationPersonEquipment
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class MailMessageTemplateController : KovaModelControllerBase<TOrganizationMailMessageTemplate>
	{
		public MailMessageTemplateController(kovaContext context) : base(context)
		{
            
		}

		// GET api/MailMessageTemplate
        [HttpGet]
        public IQueryable<TOrganizationMailMessageTemplate> Get()
        {
            return context.TOrganizationMailMessageTemplate
                .Where(AccessCriteria);
        }

		
        // GET api/MailMessageTemplate/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationMailMessageTemplate Get(Guid primKey)
        {
            return context.TOrganizationMailMessageTemplate
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class ProjectController : KovaModelControllerBase<TOrganizationProject>
	{
		public ProjectController(kovaContext context) : base(context)
		{
            
		}

		// GET api/Project
        [HttpGet]
        public IQueryable<TOrganizationProject> Get()
        {
            return context.TOrganizationProject
                .Where(AccessCriteria);
        }

		
        // GET api/Project/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationProject Get(Guid primKey)
        {
            return context.TOrganizationProject
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class QualificationController : KovaModelControllerBase<TOrganizationQualification>
	{
		public QualificationController(kovaContext context) : base(context)
		{
            
		}

		// GET api/Qualification
        [HttpGet]
        public IQueryable<TOrganizationQualification> Get()
        {
            return context.TOrganizationQualification
                .Where(AccessCriteria);
        }

		
        // GET api/Qualification/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationQualification Get(Guid primKey)
        {
            return context.TOrganizationQualification
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class HiddenCourseController : KovaModelControllerBase<TOrganizationHiddenCourse>
	{
		public HiddenCourseController(kovaContext context) : base(context)
		{
            
		}

		// GET api/HiddenCourse
        [HttpGet]
        public IQueryable<TOrganizationHiddenCourse> Get()
        {
            return context.TOrganizationHiddenCourse
                .Where(AccessCriteria);
        }

		
        // GET api/HiddenCourse/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationHiddenCourse Get(Guid primKey)
        {
            return context.TOrganizationHiddenCourse
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  	[Authorize]
    [Route("api/[controller]")]
	public partial class TaskController : KovaModelControllerBase<TOrganizationTask>
	{
		public TaskController(kovaContext context) : base(context)
		{
            
		}

		// GET api/Task
        [HttpGet]
        public IQueryable<TOrganizationTask> Get()
        {
            return context.TOrganizationTask
                .Where(AccessCriteria);
        }

		
        // GET api/Task/00000000-0000-0000-0000-000000000000
        [HttpGet("{primKey}")]
        public TOrganizationTask Get(Guid primKey)
        {
            return context.TOrganizationTask
				.Where(AccessCriteria)
                .FirstOrDefault(v => v.PrimKey == primKey);
        }
	}

  
}


#endregion

